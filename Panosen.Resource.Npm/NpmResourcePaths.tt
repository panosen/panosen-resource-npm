<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ output extension=".cs" #>
<#

    var type = this.GetType();
    var rootNamespace = this.Host.ResolveParameterValue("directiveId", "namespaceDirectiveProcessor", "namespaceHint");

    var path =  this.Host.ResolvePath("files");
    var items = new DirectoryInfo(path).GetFiles("*", SearchOption.AllDirectories);

    var regex = new Regex("[^a-zA-Z0-9]+");
#>
using System;
using System.IO;

namespace <#=rootNamespace#>
{
    /// <summary>
    /// 资源文件名
    /// </summary>
    public class NpmResourcePaths
    {
<#
    foreach (var item in items)
    {
        var relativePath = item.FullName.Replace(path, string.Empty);
#>

        /// <summary>
        /// <#=relativePath#>
        /// </summary>
        public static string <#=regex.Replace(relativePath, "_").ToLower()#> => Path.Combine(<#=string.Join(", ", relativePath.Split(new string[] { "\\" }, StringSplitOptions.RemoveEmptyEntries).Select(v => $"\"{v}\""))#>);
<#
    }
#>
    }
}

